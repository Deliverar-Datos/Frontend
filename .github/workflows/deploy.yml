name: SSH Git Pull

on:
  push:
    branches:
      - dev  # Ejecutar cuando haya un push en la rama 'dev2'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout del código
      - name: Checkout del código
        uses: actions/checkout@v3

      # 2. Configurar la clave SSH
      - name: Configurar la clave SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # 3. Agregar el servidor al archivo de hosts conocidos
      - name: Configurar Host SSH
        run: |
          ssh-keyscan -H ${{ secrets.SSH_HOST_FRONT }} >> ~/.ssh/known_hosts

      # 4. Conectarse al servidor, cambiar de directorio y hacer git pull
      - name: Conectar al servidor y hacer git pull
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST_FRONT }} << 'EOF'
            cd 
            git clone https://github.com/Deliverar-Datos/Frontend.git
            cd ./Frontend/frontend-bi
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
            export NVM_DIR="$([ -s "$HOME/.nvm/nvm.sh" ] && echo "$HOME/.nvm" || printf "nvm no found")"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # This loads nvm bash completion

            nvm install "$NODE_VERSION"
            nvm use "$NODE_VERSION"
            nvm alias default "$NODE_VERSION"
            npm install
            npm run build
            cp -r ./build/* /var/www/mi-app-react/       
            ls -la /var/www/mi-app-react/
            echo "Se copio la aplicacion"
                
            echo "Se Actualizo la Aplicacion"
            sudo systemctl restart nginx.service
            echo "Se reinicio el servicio de Nginx" 
          EOF